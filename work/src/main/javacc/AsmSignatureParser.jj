options{
	STATIC=false;
	IGNORE_CASE=false;
}

PARSER_BEGIN(AsmSignatureParser)

package com.slavi.lang;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;


public class AsmSignatureParser {
	public Set<String> classes = new HashSet();
}
PARSER_END(AsmSignatureParser)

TOKEN: {
	<OBJECT: "L" > : ID |
	<TYPE_VAR: "T" > |
	<SLASH: "/"> : ID |
	<DOT: "."> : ID
}

<ID> TOKEN: {
	<JAVA_IDENTIFIER: ["a"-"z","A"-"Z"] (["a"-"z","A"-"Z","0"-"9","_"])* > : DEFAULT
}

void typeArgs(): {}
{
	"<"
	(
		"*" |
		(
			("+" | "-")?
			fieldTypeSignature()
		)+
	)
	">"
}

void fieldTypeSignature():						{ String cl = ""; 			}
{
	(
		// ClassType signature
		<OBJECT>
		(
			(
				<JAVA_IDENTIFIER>				{ cl = token.image; 		}
				(
					<SLASH> <JAVA_IDENTIFIER>	{ cl += "/" + token.image;	}
				)*
			)									{ classes.add(cl); 			}
			( typeArgs() )?
			(
				<DOT>
				<JAVA_IDENTIFIER>
				( typeArgs() )?
			)*
		)
		";"
	) | 
	("[" typeSignature() ) |
	(
		<TYPE_VAR> : ID
		<JAVA_IDENTIFIER>
		";"
	)
}

void typeSignature(): {}
{
	"Z" | "C" | "B" | "S" | "I" | "F" | "J" | "D" |
	fieldTypeSignature()
}

//void methodTypeSignature(): {}
//{
//	("<"  ">"
//	)?
//}
//
//
//void typeParam(): {}
//{
//	<JAVA_IDENTIFIER> ":" ( fieldTypeSignature() )?
//	(":" fieldTypeSignature())*
//}
//
//void parseMethod(): {}
//{
//	methodTypeSignature()
//	<EOF>
//}

void parseType(): {}
{
	typeSignature()
	<EOF>
}
