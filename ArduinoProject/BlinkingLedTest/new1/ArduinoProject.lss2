...
AVR Memory Usage
----------------
Device: atmega328p

Program:    1762 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:         56 bytes (2.7% Full)
(.data + .bss + .noinit)


...
...
   text	   data	    bss	    dec	    hex	filename
   1748	     14	     42	   1804	    70c	ArduinoProject.elf
...
...

ArduinoProject.elf:     file format elf32-avr

Contents of section .data:
 800100 00000000 bd009600 00000000 ab00      ..............  
...
...
Print final symbols sizes (b - .bss; d - .data; t - .text; v/w - weak)
...
...
00000001 b timer0_fract
00000004 B timer0_millis
00000004 B timer0_overflow_count
00000033 B mainClass
00000006 T exit
00000010 T port_to_input_PGM
00000010 T port_to_mode_PGM
00000010 T port_to_output_PGM
00000014 t slavi::BLINK2
00000020 T digital_pin_to_bit_mask_PGM
00000020 T digital_pin_to_port_PGM
00000020 T digital_pin_to_timer_PGM
00000026 t global constructors keyed to _Znwj
00000028 T millis
00000118 T init
00000126 T pinMode
00000144 T __vector_16
00000628 T main
00000006 V vtable for slavi::DigitalInputArduinoPin<void>
00000008 V vtable for slavi::DigitalOutputArduinoPin<void>
00000006 W slavi::DigitalOutputArduinoPin<void>::getState()
00000036 W slavi::DigitalInputArduinoPin<void>::getState()
00000042 W slavi::DigitalOutputArduinoPin<void>::setState(bool)
00000278 W slavi::BlinkingLed<void>::update()
...
...

ArduinoProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000006d4  00000768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  0080010e  000006e2  00000776  2**0
                  ALLOC
  3 .stab         00000768  00000000  00000000  00000778  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000ae  00000000  00000000  00000ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__ctors_end>
   4:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
   8:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
   c:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  10:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  14:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  18:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  1c:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  20:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  24:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  28:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  2c:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  30:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  34:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  38:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  3c:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  40:	0c 94 92 02 	jmp	0x524	; 0x524 <__vector_16>
  44:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  48:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  4c:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  50:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  54:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  58:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  5c:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  60:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>
  64:	0c 94 91 00 	jmp	0x122	; 0x122 <__bad_interrupt>

00000068 <slavi::BLINK2>:
  68:	32 00 fa 00 32 00 fa 00 fa 00 fa 00 00 00           2...2.........

00000076 <port_to_mode_PGM>:
  76:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

00000080 <port_to_output_PGM>:
  80:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000008a <port_to_input_PGM>:
  8a:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000094 <digital_pin_to_port_PGM>:
  94:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
  a4:	03 03 03 03                                         ....

000000a8 <digital_pin_to_bit_mask_PGM>:
  a8:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
  b8:	04 08 10 20                                         ... 

000000bc <digital_pin_to_timer_PGM>:
  bc:	00 00 00 07 00 02 01 00 00 03 04 06 00 00 00 00     ................
  cc:	00 00 00 00                                         ....

000000d0 <__ctors_start>:
  d0:	c0 00       	.word	0x00c0	; ????

000000d2 <__ctors_end>:
  d2:	11 24       	eor	r1, r1
  d4:	1f be       	out	0x3f, r1	; 63
  d6:	cf ef       	ldi	r28, 0xFF	; 255
  d8:	d8 e0       	ldi	r29, 0x08	; 8
  da:	de bf       	out	0x3e, r29	; 62
  dc:	cd bf       	out	0x3d, r28	; 61

000000de <__do_copy_data>:
  de:	11 e0       	ldi	r17, 0x01	; 1
  e0:	a0 e0       	ldi	r26, 0x00	; 0
  e2:	b1 e0       	ldi	r27, 0x01	; 1
  e4:	e4 ed       	ldi	r30, 0xD4	; 212
  e6:	f6 e0       	ldi	r31, 0x06	; 6
  e8:	02 c0       	rjmp	.+4      	; 0xee <.do_copy_data_start>

000000ea <.do_copy_data_loop>:
  ea:	05 90       	lpm	r0, Z+
  ec:	0d 92       	st	X+, r0

000000ee <.do_copy_data_start>:
  ee:	ae 30       	cpi	r26, 0x0E	; 14
  f0:	b1 07       	cpc	r27, r17
  f2:	d9 f7       	brne	.-10     	; 0xea <.do_copy_data_loop>

000000f4 <__do_clear_bss>:
  f4:	11 e0       	ldi	r17, 0x01	; 1
  f6:	ae e0       	ldi	r26, 0x0E	; 14
  f8:	b1 e0       	ldi	r27, 0x01	; 1
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a8 33       	cpi	r26, 0x38	; 56
 100:	b1 07       	cpc	r27, r17
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>

00000104 <__do_global_ctors>:
 104:	10 e0       	ldi	r17, 0x00	; 0
 106:	c2 ed       	ldi	r28, 0xD2	; 210
 108:	d0 e0       	ldi	r29, 0x00	; 0
 10a:	04 c0       	rjmp	.+8      	; 0x114 <.do_global_ctors_start>

0000010c <.do_global_ctors_loop>:
 10c:	22 97       	sbiw	r28, 0x02	; 2
 10e:	fe 01       	movw	r30, r28
 110:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__tablejump__>

00000114 <.do_global_ctors_start>:
 114:	c0 3d       	cpi	r28, 0xD0	; 208
 116:	d1 07       	cpc	r29, r17
 118:	c9 f7       	brne	.-14     	; 0x10c <.do_global_ctors_loop>
 11a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <main>
 11e:	0c 94 93 00 	jmp	0x126	; 0x126 <exit>

00000122 <__bad_interrupt>:
 122:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000126 <exit>:
 126:	f8 94       	cli
 128:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <_exit>

0000012c <slavi::DigitalOutputArduinoPin<void>::setState(bool)>:
 12c:	fc 01       	movw	r30, r24
 12e:	65 83       	std	Z+5, r22	; 0x05
 130:	a3 81       	ldd	r26, Z+3	; 0x03
 132:	b4 81       	ldd	r27, Z+4	; 0x04
 134:	22 81       	ldd	r18, Z+2	; 0x02
 136:	66 23       	and	r22, r22
 138:	31 f0       	breq	.+12     	; 0x146 <slavi::DigitalOutputArduinoPin<void>::setState(bool)+0x1a>
 13a:	9f b7       	in	r25, 0x3f	; 63
 13c:	f8 94       	cli
 13e:	8c 91       	ld	r24, X
 140:	82 2b       	or	r24, r18
 142:	8c 93       	st	X, r24
 144:	06 c0       	rjmp	.+12     	; 0x152 <slavi::DigitalOutputArduinoPin<void>::setState(bool)+0x26>
 146:	9f b7       	in	r25, 0x3f	; 63
 148:	f8 94       	cli
 14a:	8c 91       	ld	r24, X
 14c:	20 95       	com	r18
 14e:	28 23       	and	r18, r24
 150:	2c 93       	st	X, r18
 152:	9f bf       	out	0x3f, r25	; 63
 154:	08 95       	ret

00000156 <slavi::DigitalInputArduinoPin<void>::getState()>:
 156:	dc 01       	movw	r26, r24
 158:	13 96       	adiw	r26, 0x03	; 3
 15a:	ed 91       	ld	r30, X+
 15c:	fc 91       	ld	r31, X
 15e:	14 97       	sbiw	r26, 0x04	; 4
 160:	20 81       	ld	r18, Z
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	12 96       	adiw	r26, 0x02	; 2
 168:	8c 91       	ld	r24, X
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	28 23       	and	r18, r24
 16e:	39 23       	and	r19, r25
 170:	23 2b       	or	r18, r19
 172:	09 f0       	breq	.+2      	; 0x176 <slavi::DigitalInputArduinoPin<void>::getState()+0x20>
 174:	41 e0       	ldi	r20, 0x01	; 1
 176:	84 2f       	mov	r24, r20
 178:	08 95       	ret

0000017a <slavi::DigitalOutputArduinoPin<void>::getState()>:
 17a:	fc 01       	movw	r30, r24
 17c:	85 81       	ldd	r24, Z+5	; 0x05
 17e:	08 95       	ret

00000180 <global constructors keyed to _Znwj>:
 180:	84 e0       	ldi	r24, 0x04	; 4
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	90 93 25 01 	sts	0x0125, r25
 188:	80 93 24 01 	sts	0x0124, r24
 18c:	8c e0       	ldi	r24, 0x0C	; 12
 18e:	91 e0       	ldi	r25, 0x01	; 1
 190:	90 93 2b 01 	sts	0x012B, r25
 194:	80 93 2a 01 	sts	0x012A, r24
 198:	08 95       	ret

0000019a <slavi::BlinkingLed<void>::update()>:
 19a:	ef 92       	push	r14
 19c:	ff 92       	push	r15
 19e:	0f 93       	push	r16
 1a0:	1f 93       	push	r17
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	ec 01       	movw	r28, r24
 1a8:	89 85       	ldd	r24, Y+9	; 0x09
 1aa:	9a 85       	ldd	r25, Y+10	; 0x0a
 1ac:	89 2b       	or	r24, r25
 1ae:	09 f4       	brne	.+2      	; 0x1b2 <slavi::BlinkingLed<void>::update()+0x18>
 1b0:	6b c0       	rjmp	.+214    	; 0x288 <slavi::BlinkingLed<void>::update()+0xee>
 1b2:	0e 94 da 02 	call	0x5b4	; 0x5b4 <millis>
 1b6:	7b 01       	movw	r14, r22
 1b8:	8c 01       	movw	r16, r24
 1ba:	8d 81       	ldd	r24, Y+5	; 0x05
 1bc:	9e 81       	ldd	r25, Y+6	; 0x06
 1be:	af 81       	ldd	r26, Y+7	; 0x07
 1c0:	b8 85       	ldd	r27, Y+8	; 0x08
 1c2:	a8 01       	movw	r20, r16
 1c4:	97 01       	movw	r18, r14
 1c6:	28 1b       	sub	r18, r24
 1c8:	39 0b       	sbc	r19, r25
 1ca:	4a 0b       	sbc	r20, r26
 1cc:	5b 0b       	sbc	r21, r27
 1ce:	57 fd       	sbrc	r21, 7
 1d0:	68 c0       	rjmp	.+208    	; 0x2a2 <slavi::BlinkingLed<void>::update()+0x108>
 1d2:	6f b7       	in	r22, 0x3f	; 63
 1d4:	f8 94       	cli
 1d6:	49 85       	ldd	r20, Y+9	; 0x09
 1d8:	5a 85       	ldd	r21, Y+10	; 0x0a
 1da:	41 15       	cp	r20, r1
 1dc:	51 05       	cpc	r21, r1
 1de:	19 f4       	brne	.+6      	; 0x1e6 <slavi::BlinkingLed<void>::update()+0x4c>
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	30 c0       	rjmp	.+96     	; 0x246 <slavi::BlinkingLed<void>::update()+0xac>
 1e6:	2c 81       	ldd	r18, Y+4	; 0x04
 1e8:	82 2f       	mov	r24, r18
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	ea 81       	ldd	r30, Y+2	; 0x02
 1f2:	fb 81       	ldd	r31, Y+3	; 0x03
 1f4:	e8 0f       	add	r30, r24
 1f6:	f9 1f       	adc	r31, r25
 1f8:	2f 5f       	subi	r18, 0xFF	; 255
 1fa:	2c 83       	std	Y+4, r18	; 0x04
 1fc:	25 91       	lpm	r18, Z+
 1fe:	34 91       	lpm	r19, Z+
 200:	21 15       	cp	r18, r1
 202:	31 05       	cpc	r19, r1
 204:	01 f5       	brne	.+64     	; 0x246 <slavi::BlinkingLed<void>::update()+0xac>
 206:	1b 86       	std	Y+11, r1	; 0x0b
 208:	1c 82       	std	Y+4, r1	; 0x04
 20a:	14 16       	cp	r1, r20
 20c:	15 06       	cpc	r1, r21
 20e:	24 f4       	brge	.+8      	; 0x218 <slavi::BlinkingLed<void>::update()+0x7e>
 210:	41 50       	subi	r20, 0x01	; 1
 212:	50 40       	sbci	r21, 0x00	; 0
 214:	5a 87       	std	Y+10, r21	; 0x0a
 216:	49 87       	std	Y+9, r20	; 0x09
 218:	89 85       	ldd	r24, Y+9	; 0x09
 21a:	9a 85       	ldd	r25, Y+10	; 0x0a
 21c:	89 2b       	or	r24, r25
 21e:	99 f0       	breq	.+38     	; 0x246 <slavi::BlinkingLed<void>::update()+0xac>
 220:	2c 81       	ldd	r18, Y+4	; 0x04
 222:	82 2f       	mov	r24, r18
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	ea 81       	ldd	r30, Y+2	; 0x02
 22c:	fb 81       	ldd	r31, Y+3	; 0x03
 22e:	e8 0f       	add	r30, r24
 230:	f9 1f       	adc	r31, r25
 232:	2f 5f       	subi	r18, 0xFF	; 255
 234:	2c 83       	std	Y+4, r18	; 0x04
 236:	25 91       	lpm	r18, Z+
 238:	34 91       	lpm	r19, Z+
 23a:	21 15       	cp	r18, r1
 23c:	31 05       	cpc	r19, r1
 23e:	19 f4       	brne	.+6      	; 0x246 <slavi::BlinkingLed<void>::update()+0xac>
 240:	1c 82       	std	Y+4, r1	; 0x04
 242:	1a 86       	std	Y+10, r1	; 0x0a
 244:	19 86       	std	Y+9, r1	; 0x09
 246:	6f bf       	out	0x3f, r22	; 63
 248:	21 15       	cp	r18, r1
 24a:	31 05       	cpc	r19, r1
 24c:	11 f4       	brne	.+4      	; 0x252 <slavi::BlinkingLed<void>::update()+0xb8>
 24e:	1b 86       	std	Y+11, r1	; 0x0b
 250:	04 c0       	rjmp	.+8      	; 0x25a <slavi::BlinkingLed<void>::update()+0xc0>
 252:	8b 85       	ldd	r24, Y+11	; 0x0b
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	89 27       	eor	r24, r25
 258:	8b 87       	std	Y+11, r24	; 0x0b
 25a:	c9 01       	movw	r24, r18
 25c:	a0 e0       	ldi	r26, 0x00	; 0
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	8e 0d       	add	r24, r14
 262:	9f 1d       	adc	r25, r15
 264:	a0 1f       	adc	r26, r16
 266:	b1 1f       	adc	r27, r17
 268:	8d 83       	std	Y+5, r24	; 0x05
 26a:	9e 83       	std	Y+6, r25	; 0x06
 26c:	af 83       	std	Y+7, r26	; 0x07
 26e:	b8 87       	std	Y+8, r27	; 0x08
 270:	a8 81       	ld	r26, Y
 272:	b9 81       	ldd	r27, Y+1	; 0x01
 274:	ed 91       	ld	r30, X+
 276:	fc 91       	ld	r31, X
 278:	11 97       	sbiw	r26, 0x01	; 1
 27a:	02 80       	ldd	r0, Z+2	; 0x02
 27c:	f3 81       	ldd	r31, Z+3	; 0x03
 27e:	e0 2d       	mov	r30, r0
 280:	cd 01       	movw	r24, r26
 282:	6b 85       	ldd	r22, Y+11	; 0x0b
 284:	09 95       	icall
 286:	0d c0       	rjmp	.+26     	; 0x2a2 <slavi::BlinkingLed<void>::update()+0x108>
 288:	1b 86       	std	Y+11, r1	; 0x0b
 28a:	e8 81       	ld	r30, Y
 28c:	f9 81       	ldd	r31, Y+1	; 0x01
 28e:	a0 81       	ld	r26, Z
 290:	b1 81       	ldd	r27, Z+1	; 0x01
 292:	12 96       	adiw	r26, 0x02	; 2
 294:	2d 91       	ld	r18, X+
 296:	3c 91       	ld	r19, X
 298:	13 97       	sbiw	r26, 0x03	; 3
 29a:	cf 01       	movw	r24, r30
 29c:	60 e0       	ldi	r22, 0x00	; 0
 29e:	f9 01       	movw	r30, r18
 2a0:	09 95       	icall
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	1f 91       	pop	r17
 2a8:	0f 91       	pop	r16
 2aa:	ff 90       	pop	r15
 2ac:	ef 90       	pop	r14
 2ae:	08 95       	ret

000002b0 <main>:
 2b0:	6f 92       	push	r6
 2b2:	7f 92       	push	r7
 2b4:	8f 92       	push	r8
 2b6:	9f 92       	push	r9
 2b8:	af 92       	push	r10
 2ba:	bf 92       	push	r11
 2bc:	df 92       	push	r13
 2be:	ef 92       	push	r14
 2c0:	ff 92       	push	r15
 2c2:	0f 93       	push	r16
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <init>
 2ce:	ec ea       	ldi	r30, 0xAC	; 172
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	e4 91       	lpm	r30, Z+
 2d4:	e0 93 2c 01 	sts	0x012C, r30
 2d8:	e8 e9       	ldi	r30, 0x98	; 152
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	e4 91       	lpm	r30, Z+
 2de:	0e 2f       	mov	r16, r30
 2e0:	10 e0       	ldi	r17, 0x00	; 0
 2e2:	00 0f       	add	r16, r16
 2e4:	11 1f       	adc	r17, r17
 2e6:	f8 01       	movw	r30, r16
 2e8:	e6 57       	subi	r30, 0x76	; 118
 2ea:	ff 4f       	sbci	r31, 0xFF	; 255
 2ec:	85 91       	lpm	r24, Z+
 2ee:	94 91       	lpm	r25, Z+
 2f0:	90 93 2e 01 	sts	0x012E, r25
 2f4:	80 93 2d 01 	sts	0x012D, r24
 2f8:	84 e0       	ldi	r24, 0x04	; 4
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	0e 94 23 03 	call	0x646	; 0x646 <pinMode>
 300:	c8 01       	movw	r24, r16
 302:	80 58       	subi	r24, 0x80	; 128
 304:	9f 4f       	sbci	r25, 0xFF	; 255
 306:	fc 01       	movw	r30, r24
 308:	a5 91       	lpm	r26, Z+
 30a:	b4 91       	lpm	r27, Z+
 30c:	2f b7       	in	r18, 0x3f	; 63
 30e:	f8 94       	cli
 310:	8c 91       	ld	r24, X
 312:	90 91 2c 01 	lds	r25, 0x012C
 316:	89 2b       	or	r24, r25
 318:	8c 93       	st	X, r24
 31a:	2f bf       	out	0x3f, r18	; 63
 31c:	0a e2       	ldi	r16, 0x2A	; 42
 31e:	11 e0       	ldi	r17, 0x01	; 1
 320:	10 93 0f 01 	sts	0x010F, r17
 324:	00 93 0e 01 	sts	0x010E, r16
 328:	8a e0       	ldi	r24, 0x0A	; 10
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	90 93 17 01 	sts	0x0117, r25
 330:	80 93 16 01 	sts	0x0116, r24
 334:	0e 94 da 02 	call	0x5b4	; 0x5b4 <millis>
 338:	60 93 12 01 	sts	0x0112, r22
 33c:	70 93 13 01 	sts	0x0113, r23
 340:	80 93 14 01 	sts	0x0114, r24
 344:	90 93 15 01 	sts	0x0115, r25
 348:	a0 91 0e 01 	lds	r26, 0x010E
 34c:	b0 91 0f 01 	lds	r27, 0x010F
 350:	ed 91       	ld	r30, X+
 352:	fc 91       	ld	r31, X
 354:	11 97       	sbiw	r26, 0x01	; 1
 356:	01 90       	ld	r0, Z+
 358:	f0 81       	ld	r31, Z
 35a:	e0 2d       	mov	r30, r0
 35c:	cd 01       	movw	r24, r26
 35e:	09 95       	icall
 360:	80 93 11 01 	sts	0x0111, r24
 364:	80 93 10 01 	sts	0x0110, r24
 368:	e5 eb       	ldi	r30, 0xB5	; 181
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	e4 91       	lpm	r30, Z+
 36e:	e0 93 26 01 	sts	0x0126, r30
 372:	e1 ea       	ldi	r30, 0xA1	; 161
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	e4 91       	lpm	r30, Z+
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	ee 0f       	add	r30, r30
 37c:	ff 1f       	adc	r31, r31
 37e:	e0 58       	subi	r30, 0x80	; 128
 380:	ff 4f       	sbci	r31, 0xFF	; 255
 382:	85 91       	lpm	r24, Z+
 384:	94 91       	lpm	r25, Z+
 386:	90 93 28 01 	sts	0x0128, r25
 38a:	80 93 27 01 	sts	0x0127, r24
 38e:	8d e0       	ldi	r24, 0x0D	; 13
 390:	61 e0       	ldi	r22, 0x01	; 1
 392:	0e 94 23 03 	call	0x646	; 0x646 <pinMode>
 396:	e0 91 24 01 	lds	r30, 0x0124
 39a:	f0 91 25 01 	lds	r31, 0x0125
 39e:	06 50       	subi	r16, 0x06	; 6
 3a0:	10 40       	sbci	r17, 0x00	; 0
 3a2:	02 80       	ldd	r0, Z+2	; 0x02
 3a4:	f3 81       	ldd	r31, Z+3	; 0x03
 3a6:	e0 2d       	mov	r30, r0
 3a8:	c8 01       	movw	r24, r16
 3aa:	60 e0       	ldi	r22, 0x00	; 0
 3ac:	09 95       	icall
 3ae:	10 93 19 01 	sts	0x0119, r17
 3b2:	00 93 18 01 	sts	0x0118, r16
 3b6:	10 92 1b 01 	sts	0x011B, r1
 3ba:	10 92 1a 01 	sts	0x011A, r1
 3be:	10 92 1c 01 	sts	0x011C, r1
 3c2:	10 92 23 01 	sts	0x0123, r1
 3c6:	10 92 22 01 	sts	0x0122, r1
 3ca:	10 92 21 01 	sts	0x0121, r1
 3ce:	10 92 1d 01 	sts	0x011D, r1
 3d2:	10 92 1e 01 	sts	0x011E, r1
 3d6:	10 92 1f 01 	sts	0x011F, r1
 3da:	10 92 20 01 	sts	0x0120, r1
 3de:	e8 e6       	ldi	r30, 0x68	; 104
 3e0:	ae 2e       	mov	r10, r30
 3e2:	e0 e0       	ldi	r30, 0x00	; 0
 3e4:	be 2e       	mov	r11, r30
 3e6:	c1 e0       	ldi	r28, 0x01	; 1
 3e8:	d0 e0       	ldi	r29, 0x00	; 0
 3ea:	a0 91 0e 01 	lds	r26, 0x010E
 3ee:	b0 91 0f 01 	lds	r27, 0x010F
 3f2:	ed 91       	ld	r30, X+
 3f4:	fc 91       	ld	r31, X
 3f6:	11 97       	sbiw	r26, 0x01	; 1
 3f8:	01 90       	ld	r0, Z+
 3fa:	f0 81       	ld	r31, Z
 3fc:	e0 2d       	mov	r30, r0
 3fe:	cd 01       	movw	r24, r26
 400:	09 95       	icall
 402:	d8 2e       	mov	r13, r24
 404:	0e 94 da 02 	call	0x5b4	; 0x5b4 <millis>
 408:	7b 01       	movw	r14, r22
 40a:	8c 01       	movw	r16, r24
 40c:	80 91 11 01 	lds	r24, 0x0111
 410:	80 93 10 01 	sts	0x0110, r24
 414:	d8 16       	cp	r13, r24
 416:	21 f1       	breq	.+72     	; 0x460 <main+0x1b0>
 418:	80 91 12 01 	lds	r24, 0x0112
 41c:	90 91 13 01 	lds	r25, 0x0113
 420:	a0 91 14 01 	lds	r26, 0x0114
 424:	b0 91 15 01 	lds	r27, 0x0115
 428:	a8 01       	movw	r20, r16
 42a:	97 01       	movw	r18, r14
 42c:	28 1b       	sub	r18, r24
 42e:	39 0b       	sbc	r19, r25
 430:	4a 0b       	sbc	r20, r26
 432:	5b 0b       	sbc	r21, r27
 434:	80 91 16 01 	lds	r24, 0x0116
 438:	90 91 17 01 	lds	r25, 0x0117
 43c:	a0 e0       	ldi	r26, 0x00	; 0
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	28 17       	cp	r18, r24
 442:	39 07       	cpc	r19, r25
 444:	4a 07       	cpc	r20, r26
 446:	5b 07       	cpc	r21, r27
 448:	10 f0       	brcs	.+4      	; 0x44e <main+0x19e>
 44a:	d0 92 11 01 	sts	0x0111, r13
 44e:	e0 92 12 01 	sts	0x0112, r14
 452:	f0 92 13 01 	sts	0x0113, r15
 456:	00 93 14 01 	sts	0x0114, r16
 45a:	10 93 15 01 	sts	0x0115, r17
 45e:	2a c0       	rjmp	.+84     	; 0x4b4 <main+0x204>
 460:	80 91 16 01 	lds	r24, 0x0116
 464:	90 91 17 01 	lds	r25, 0x0117
 468:	9c 01       	movw	r18, r24
 46a:	40 e0       	ldi	r20, 0x00	; 0
 46c:	50 e0       	ldi	r21, 0x00	; 0
 46e:	80 91 12 01 	lds	r24, 0x0112
 472:	90 91 13 01 	lds	r25, 0x0113
 476:	a0 91 14 01 	lds	r26, 0x0114
 47a:	b0 91 15 01 	lds	r27, 0x0115
 47e:	37 01       	movw	r6, r14
 480:	48 01       	movw	r8, r16
 482:	68 1a       	sub	r6, r24
 484:	79 0a       	sbc	r7, r25
 486:	8a 0a       	sbc	r8, r26
 488:	9b 0a       	sbc	r9, r27
 48a:	62 16       	cp	r6, r18
 48c:	73 06       	cpc	r7, r19
 48e:	84 06       	cpc	r8, r20
 490:	95 06       	cpc	r9, r21
 492:	80 f0       	brcs	.+32     	; 0x4b4 <main+0x204>
 494:	20 95       	com	r18
 496:	30 95       	com	r19
 498:	40 95       	com	r20
 49a:	50 95       	com	r21
 49c:	2e 0d       	add	r18, r14
 49e:	3f 1d       	adc	r19, r15
 4a0:	40 1f       	adc	r20, r16
 4a2:	51 1f       	adc	r21, r17
 4a4:	20 93 12 01 	sts	0x0112, r18
 4a8:	30 93 13 01 	sts	0x0113, r19
 4ac:	40 93 14 01 	sts	0x0114, r20
 4b0:	50 93 15 01 	sts	0x0115, r21
 4b4:	88 e1       	ldi	r24, 0x18	; 24
 4b6:	91 e0       	ldi	r25, 0x01	; 1
 4b8:	0e 94 cd 00 	call	0x19a	; 0x19a <slavi::BlinkingLed<void>::update()>
 4bc:	80 91 11 01 	lds	r24, 0x0111
 4c0:	88 23       	and	r24, r24
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <main+0x216>
 4c4:	92 cf       	rjmp	.-220    	; 0x3ea <main+0x13a>
 4c6:	80 91 10 01 	lds	r24, 0x0110
 4ca:	88 23       	and	r24, r24
 4cc:	09 f4       	brne	.+2      	; 0x4d0 <main+0x220>
 4ce:	8d cf       	rjmp	.-230    	; 0x3ea <main+0x13a>
 4d0:	80 91 1a 01 	lds	r24, 0x011A
 4d4:	90 91 1b 01 	lds	r25, 0x011B
 4d8:	88 56       	subi	r24, 0x68	; 104
 4da:	90 40       	sbci	r25, 0x00	; 0
 4dc:	29 f4       	brne	.+10     	; 0x4e8 <main+0x238>
 4de:	d0 93 22 01 	sts	0x0122, r29
 4e2:	c0 93 21 01 	sts	0x0121, r28
 4e6:	19 c0       	rjmp	.+50     	; 0x51a <main+0x26a>
 4e8:	8f b7       	in	r24, 0x3f	; 63
 4ea:	f8 94       	cli
 4ec:	10 92 1c 01 	sts	0x011C, r1
 4f0:	b0 92 1b 01 	sts	0x011B, r11
 4f4:	a0 92 1a 01 	sts	0x011A, r10
 4f8:	d0 93 22 01 	sts	0x0122, r29
 4fc:	c0 93 21 01 	sts	0x0121, r28
 500:	10 92 23 01 	sts	0x0123, r1
 504:	8f bf       	out	0x3f, r24	; 63
 506:	0e 94 da 02 	call	0x5b4	; 0x5b4 <millis>
 50a:	60 93 1d 01 	sts	0x011D, r22
 50e:	70 93 1e 01 	sts	0x011E, r23
 512:	80 93 1f 01 	sts	0x011F, r24
 516:	90 93 20 01 	sts	0x0120, r25
 51a:	88 e1       	ldi	r24, 0x18	; 24
 51c:	91 e0       	ldi	r25, 0x01	; 1
 51e:	0e 94 cd 00 	call	0x19a	; 0x19a <slavi::BlinkingLed<void>::update()>
 522:	63 cf       	rjmp	.-314    	; 0x3ea <main+0x13a>

00000524 <__vector_16>:
 524:	1f 92       	push	r1
 526:	0f 92       	push	r0
 528:	0f b6       	in	r0, 0x3f	; 63
 52a:	0f 92       	push	r0
 52c:	11 24       	eor	r1, r1
 52e:	2f 93       	push	r18
 530:	3f 93       	push	r19
 532:	8f 93       	push	r24
 534:	9f 93       	push	r25
 536:	af 93       	push	r26
 538:	bf 93       	push	r27
 53a:	80 91 33 01 	lds	r24, 0x0133
 53e:	90 91 34 01 	lds	r25, 0x0134
 542:	a0 91 35 01 	lds	r26, 0x0135
 546:	b0 91 36 01 	lds	r27, 0x0136
 54a:	30 91 37 01 	lds	r19, 0x0137
 54e:	01 96       	adiw	r24, 0x01	; 1
 550:	a1 1d       	adc	r26, r1
 552:	b1 1d       	adc	r27, r1
 554:	23 2f       	mov	r18, r19
 556:	2d 5f       	subi	r18, 0xFD	; 253
 558:	2d 37       	cpi	r18, 0x7D	; 125
 55a:	20 f0       	brcs	.+8      	; 0x564 <__vector_16+0x40>
 55c:	2d 57       	subi	r18, 0x7D	; 125
 55e:	01 96       	adiw	r24, 0x01	; 1
 560:	a1 1d       	adc	r26, r1
 562:	b1 1d       	adc	r27, r1
 564:	20 93 37 01 	sts	0x0137, r18
 568:	80 93 33 01 	sts	0x0133, r24
 56c:	90 93 34 01 	sts	0x0134, r25
 570:	a0 93 35 01 	sts	0x0135, r26
 574:	b0 93 36 01 	sts	0x0136, r27
 578:	80 91 2f 01 	lds	r24, 0x012F
 57c:	90 91 30 01 	lds	r25, 0x0130
 580:	a0 91 31 01 	lds	r26, 0x0131
 584:	b0 91 32 01 	lds	r27, 0x0132
 588:	01 96       	adiw	r24, 0x01	; 1
 58a:	a1 1d       	adc	r26, r1
 58c:	b1 1d       	adc	r27, r1
 58e:	80 93 2f 01 	sts	0x012F, r24
 592:	90 93 30 01 	sts	0x0130, r25
 596:	a0 93 31 01 	sts	0x0131, r26
 59a:	b0 93 32 01 	sts	0x0132, r27
 59e:	bf 91       	pop	r27
 5a0:	af 91       	pop	r26
 5a2:	9f 91       	pop	r25
 5a4:	8f 91       	pop	r24
 5a6:	3f 91       	pop	r19
 5a8:	2f 91       	pop	r18
 5aa:	0f 90       	pop	r0
 5ac:	0f be       	out	0x3f, r0	; 63
 5ae:	0f 90       	pop	r0
 5b0:	1f 90       	pop	r1
 5b2:	18 95       	reti

000005b4 <millis>:
 5b4:	8f b7       	in	r24, 0x3f	; 63
 5b6:	f8 94       	cli
 5b8:	20 91 33 01 	lds	r18, 0x0133
 5bc:	30 91 34 01 	lds	r19, 0x0134
 5c0:	40 91 35 01 	lds	r20, 0x0135
 5c4:	50 91 36 01 	lds	r21, 0x0136
 5c8:	8f bf       	out	0x3f, r24	; 63
 5ca:	b9 01       	movw	r22, r18
 5cc:	ca 01       	movw	r24, r20
 5ce:	08 95       	ret

000005d0 <init>:
 5d0:	78 94       	sei
 5d2:	84 b5       	in	r24, 0x24	; 36
 5d4:	82 60       	ori	r24, 0x02	; 2
 5d6:	84 bd       	out	0x24, r24	; 36
 5d8:	84 b5       	in	r24, 0x24	; 36
 5da:	81 60       	ori	r24, 0x01	; 1
 5dc:	84 bd       	out	0x24, r24	; 36
 5de:	85 b5       	in	r24, 0x25	; 37
 5e0:	82 60       	ori	r24, 0x02	; 2
 5e2:	85 bd       	out	0x25, r24	; 37
 5e4:	85 b5       	in	r24, 0x25	; 37
 5e6:	81 60       	ori	r24, 0x01	; 1
 5e8:	85 bd       	out	0x25, r24	; 37
 5ea:	ee e6       	ldi	r30, 0x6E	; 110
 5ec:	f0 e0       	ldi	r31, 0x00	; 0
 5ee:	80 81       	ld	r24, Z
 5f0:	81 60       	ori	r24, 0x01	; 1
 5f2:	80 83       	st	Z, r24
 5f4:	e1 e8       	ldi	r30, 0x81	; 129
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	10 82       	st	Z, r1
 5fa:	80 81       	ld	r24, Z
 5fc:	82 60       	ori	r24, 0x02	; 2
 5fe:	80 83       	st	Z, r24
 600:	80 81       	ld	r24, Z
 602:	81 60       	ori	r24, 0x01	; 1
 604:	80 83       	st	Z, r24
 606:	e0 e8       	ldi	r30, 0x80	; 128
 608:	f0 e0       	ldi	r31, 0x00	; 0
 60a:	80 81       	ld	r24, Z
 60c:	81 60       	ori	r24, 0x01	; 1
 60e:	80 83       	st	Z, r24
 610:	e1 eb       	ldi	r30, 0xB1	; 177
 612:	f0 e0       	ldi	r31, 0x00	; 0
 614:	80 81       	ld	r24, Z
 616:	84 60       	ori	r24, 0x04	; 4
 618:	80 83       	st	Z, r24
 61a:	e0 eb       	ldi	r30, 0xB0	; 176
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	80 81       	ld	r24, Z
 620:	81 60       	ori	r24, 0x01	; 1
 622:	80 83       	st	Z, r24
 624:	ea e7       	ldi	r30, 0x7A	; 122
 626:	f0 e0       	ldi	r31, 0x00	; 0
 628:	80 81       	ld	r24, Z
 62a:	84 60       	ori	r24, 0x04	; 4
 62c:	80 83       	st	Z, r24
 62e:	80 81       	ld	r24, Z
 630:	82 60       	ori	r24, 0x02	; 2
 632:	80 83       	st	Z, r24
 634:	80 81       	ld	r24, Z
 636:	81 60       	ori	r24, 0x01	; 1
 638:	80 83       	st	Z, r24
 63a:	80 81       	ld	r24, Z
 63c:	80 68       	ori	r24, 0x80	; 128
 63e:	80 83       	st	Z, r24
 640:	10 92 c1 00 	sts	0x00C1, r1
 644:	08 95       	ret

00000646 <pinMode>:
 646:	cf 93       	push	r28
 648:	df 93       	push	r29
 64a:	48 2f       	mov	r20, r24
 64c:	50 e0       	ldi	r21, 0x00	; 0
 64e:	ca 01       	movw	r24, r20
 650:	88 55       	subi	r24, 0x58	; 88
 652:	9f 4f       	sbci	r25, 0xFF	; 255
 654:	fc 01       	movw	r30, r24
 656:	34 91       	lpm	r19, Z+
 658:	4c 56       	subi	r20, 0x6C	; 108
 65a:	5f 4f       	sbci	r21, 0xFF	; 255
 65c:	fa 01       	movw	r30, r20
 65e:	84 91       	lpm	r24, Z+
 660:	88 23       	and	r24, r24
 662:	69 f1       	breq	.+90     	; 0x6be <pinMode+0x78>
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	88 0f       	add	r24, r24
 668:	99 1f       	adc	r25, r25
 66a:	fc 01       	movw	r30, r24
 66c:	ea 58       	subi	r30, 0x8A	; 138
 66e:	ff 4f       	sbci	r31, 0xFF	; 255
 670:	a5 91       	lpm	r26, Z+
 672:	b4 91       	lpm	r27, Z+
 674:	fc 01       	movw	r30, r24
 676:	e0 58       	subi	r30, 0x80	; 128
 678:	ff 4f       	sbci	r31, 0xFF	; 255
 67a:	c5 91       	lpm	r28, Z+
 67c:	d4 91       	lpm	r29, Z+
 67e:	66 23       	and	r22, r22
 680:	51 f4       	brne	.+20     	; 0x696 <pinMode+0x50>
 682:	2f b7       	in	r18, 0x3f	; 63
 684:	f8 94       	cli
 686:	8c 91       	ld	r24, X
 688:	93 2f       	mov	r25, r19
 68a:	90 95       	com	r25
 68c:	89 23       	and	r24, r25
 68e:	8c 93       	st	X, r24
 690:	88 81       	ld	r24, Y
 692:	89 23       	and	r24, r25
 694:	0b c0       	rjmp	.+22     	; 0x6ac <pinMode+0x66>
 696:	62 30       	cpi	r22, 0x02	; 2
 698:	61 f4       	brne	.+24     	; 0x6b2 <pinMode+0x6c>
 69a:	2f b7       	in	r18, 0x3f	; 63
 69c:	f8 94       	cli
 69e:	8c 91       	ld	r24, X
 6a0:	93 2f       	mov	r25, r19
 6a2:	90 95       	com	r25
 6a4:	89 23       	and	r24, r25
 6a6:	8c 93       	st	X, r24
 6a8:	88 81       	ld	r24, Y
 6aa:	83 2b       	or	r24, r19
 6ac:	88 83       	st	Y, r24
 6ae:	2f bf       	out	0x3f, r18	; 63
 6b0:	06 c0       	rjmp	.+12     	; 0x6be <pinMode+0x78>
 6b2:	9f b7       	in	r25, 0x3f	; 63
 6b4:	f8 94       	cli
 6b6:	8c 91       	ld	r24, X
 6b8:	83 2b       	or	r24, r19
 6ba:	8c 93       	st	X, r24
 6bc:	9f bf       	out	0x3f, r25	; 63
 6be:	df 91       	pop	r29
 6c0:	cf 91       	pop	r28
 6c2:	08 95       	ret

000006c4 <__tablejump2__>:
 6c4:	ee 0f       	add	r30, r30
 6c6:	ff 1f       	adc	r31, r31

000006c8 <__tablejump__>:
 6c8:	05 90       	lpm	r0, Z+
 6ca:	f4 91       	lpm	r31, Z+
 6cc:	e0 2d       	mov	r30, r0
 6ce:	09 94       	ijmp

000006d0 <_exit>:
 6d0:	f8 94       	cli

000006d2 <__stop_program>:
 6d2:	ff cf       	rjmp	.-2      	; 0x6d2 <__stop_program>
