package com.slavi.img;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;

public class PanoList {

	public ArrayList<PanoPairList>items;
	
	public PanoList() {
		items = new ArrayList<PanoPairList>();
	}

	public void addItem(PanoPairList item) {
		if (item == null)
			return;
		
		// Test is the pano pair list has enough good points
		int goodCount = 0;
		for (int i = 0; i < item.items.size(); i++) {
			PanoPair pp = item.items.get(i);
			if (pp.discrepancy < 2.0)
				goodCount++;
		}
		if (goodCount < 10) {
			return;
		}
		items.add(item);
	}
	
	public ArrayList<PanoPairList> getImageChain() {
		while (items.size() > 0) {
			PanoPairList start = items.remove(0);
			ArrayList<PanoPairList>result = new ArrayList<PanoPairList>();
			result.add(start);
			
			int curItemIndex = items.size() - 1;
			while (curItemIndex >= 0) {
				PanoPairList curItem = items.get(curItemIndex);
				
				for (int iIndex = result.size() - 1; iIndex >= 0; iIndex--) {
					PanoPairList i = result.get(iIndex);
					if (
							i.sourceImage.equalsIgnoreCase(curItem.sourceImage) ||
							i.sourceImage.equalsIgnoreCase(curItem.targetImage) ||
							i.targetImage.equalsIgnoreCase(curItem.sourceImage) ||
							i.targetImage.equalsIgnoreCase(curItem.targetImage)) {
						result.add(curItem);
						items.remove(curItemIndex);
						curItemIndex = items.size();
						break;
					}
				}
				curItemIndex--;
			}
			// Found a chain.
			return result;
		}
		return null;
	}
	
	private static class ImageFileData {
		String image;
		int sizeX, sizeY, id;
		
		public ImageFileData(String image, int sizeX, int sizeY) {
			this.image = image;
			this.sizeX = sizeX;
			this.sizeY = sizeY;
			this.id = -1;
		}
	}
	
	public static void writeToPtoFile(File ptoFile, ArrayList<PanoPairList>chain) throws FileNotFoundException {
		if (chain == null)
			return;
		if (chain.size() < 1)
			return;
		
		// Make images list
		HashMap<String, ImageFileData>map = new HashMap<String, ImageFileData>();
		for (PanoPairList p : chain) {
			if (!map.containsKey(p.sourceImage))
				map.put(p.sourceImage, new ImageFileData(p.sourceImage, p.sourceImageSizeX, p.sourceImageSizeY));
			if (!map.containsKey(p.targetImage))
				map.put(p.targetImage, new ImageFileData(p.targetImage, p.targetImageSizeX, p.targetImageSizeY));
		}		
		
		PrintStream fou = new PrintStream(ptoFile);
		fou.println("# Hugin project file");
		fou.println("# automatically generated by autopano-sift, available at");
		fou.println("p f2 w3000 h1500 v360  n\"JPEG q90\"");
		fou.println("m g1 i0\n");
		//...
		//pto.WriteLine ("i w{0} h{1} f0 a={2} b={2} c={2} d0 e0 p{3} r{4} v={2} y{5}  u10 n\"{6}\"",
		//   fou.println("i w{0} h{1} f0 a0 b-0.01 c0 d0 e0 p{2} r{3} v180 y{4}  u10 n\"{5}\"");
		//kx.XDim, kx.YDim, refIdx, pitch, rotation, yaw, imageFile

		Collection<ImageFileData>imageData = map.values();
		int imageCount = 0;
		for (ImageFileData i : imageData) {
			i.id = imageCount++;
			fou.println("i w" + i.sizeX + " h" + i.sizeY + " f0 a0 b0 c0 d0 e0 g0 p0 r0 t0 v38 y0 u10 n\"" + i.image + "\"");
		}
		
		fou.println();
		fou.println("v p1 r1 y1");
		fou.println();

		for (PanoPairList p : chain) {
			ImageFileData sd = map.get(p.sourceImage);
			ImageFileData td = map.get(p.targetImage);
			
			for (PanoPair pp : p.items) {
				//fou.println("c n{0} N{1} x{2} y{3} X{4} Y{5} t0");
				//imageNameTab[ms.File1], imageNameTab[ms.File2],m.Kp1.X, m.Kp1.Y, m.Kp2.X, m.Kp2.Y
				fou.println("c n" + sd.id + " N" + td.id +
					" x" + Double.toString(pp.sx) + 
					" y" + Double.toString(pp.sy) + 
					" X" + Double.toString(pp.tx) + 
					" Y" + Double.toString(pp.ty) + " t0");
			}
		}		
		
		fou.println();
		fou.println("# match list automatically generated");
	}
}
