Maths:

КС - Координатна Система

Дадено:
=======
	Направени на n снимки от една точка S. Снимките са с еднаква разделителна способност (dpi) и са
направени чрез ротация на камерата (снимките НЕ са обработвани - crop).
	Разполагаме с k двойки съответстващи точки - дадена точка P от заснемания обект/пейзаж/местност
се среща в две (съседни) изображения, т.е. точка P се проектира в изображение 1 в т.P1 и в изобр. 2
съответно в т.P2. Така имаме двойката точки P1\P2.

Измервания:
===========
	Измерени са образните координати на т.P1(X1, Y1) и т.P2(X2, Y2) в снимките. Под "измерване" се
разбира координатите на двойка съответстващи точки в две изображения, т.е. [X1, Y1, X2, Y2] е
едно измерване. R1...Rk

Задача:
=======
	Снимките 1..n са направени от една точка, но с различно фокусно разстояние (zoom). Снимките са
правени само с ротация на камерата, без отместване (или отместването е пренебрежимо малко). С така
направените измервания да се определят положенията на камерите и фокусните разстояние към момента
на заснемането в единна координатна система, така че да е възможно "съединяването" на отделните
изображения с минимални деформации и получаването на едно непрекъснато (панорамно) изображение.

Координатни системи:
====================

1.	Координатна система на снимката.
	Това са координатите на пикселите на снимката. Началото е горният, ляв ъгъл, ос X е насочена
на дясно, ос Y надолу. Така т.P1 в снимка 1 има координати P1(x1, y1). Точката, намираща се
най-долу, дясно на снимката има координати (W1 - 1, H1 - 1), където W1, H1 са широчина (Width) и
височина (Height) на снимката.

2.	Образна координатна система.
	Осите са успоредни с осите на координатната система на снимката, а центърът (O1 за снимка 1)
се намира в "средата" на снимката. Така т. P1 има координати:
P1(X1, Y1) = (x1 - W1 / 2, y1 - H1 / 2)

3.	Координатна система на камерата.
	Това е 3D координатна система с начало фокусния център S на камерата, оси X и Y успоредни на
съответните оси на образната коорд. система и ос Z перпендикулярна на снимката. Оста Z пресича
образната координатна система в т. O1 за снимка 1. Така т. P1 има координати:
P1(X1, Y1, Z1) = (x1 - W1 / 2, y1 - H1 / 2, f1)
където f1 е фокусното разстояние на камерата при заснемане на снимка 1.

4.	Единна координатна система.
	Това също е 3D координатна система с начало S, което е и център на координатните системи на
камерата за всяка от снимките. Да се намерят параметрите на афинна трансформация - ротация и
мащабиране (нямаме транслация) за всяка снимка за преминаване от координатна система на камерата
към единна коорд.система. 

Параметрите на афинната трансформация за снимка 1 са:
     | a1 b1 c1 |
M1 = | d1 e1 f1 | = [a1 b1 c1; d1 e1 f1; g1 h1 i1]
     | g1 h1 i1 |

Координати на проекциите на точка P в снимки 1 и 2 съответно P1/P2 и трансформиране на 
точки P1/P2 в глобална коорд. система:
P'1 = M1 * P1
P'2 = M2 * P2
P'1 <> P'2

P'1(x) = a1*X1 + b1*Y1 + c1*Z1
P'1(y) = d1*X1 + e1*Y1 + f1*Z1
P'1(z) = g1*X1 + h1*Y1 + i1*Z1

P'2(x) = a2*X2 + b2*Y2 + c2*Z2
P'2(y) = d2*X2 + e2*Y2 + f2*Z2
P'2(z) = g2*X2 + h2*Y2 + i2*Z2

Условие за колинеарност:
========================
	Разглеждаме векторите с начало т.S и т.P'1 и т.P'2.  Тъй като т.P'1 и т.P'2 са получени
от прободите на вектора (S;P) в равнините на снимки 1 и 2 то следва, че векторите (S;P'1) и
(S;P'2) лежат на една права, имат общо начало и са еднопосочни. Условието за колинеарност на
вектори е векторното им произведение да е нула.
F() = P'1 x P'2 = 0

fx = P'1(y) * P'2(z) - P'1(z) * P'2(y) = 0
fy = P'1(x) * P'2(z) - P'1(z) * P'2(x) = 0
fz = P'1(x) * P'2(y) - P'1(y) * P'2(x) = 0

fx = (d1*X1 + e1*Y1 + f1*Z1) * (g2*X2 + h2*Y2 + i2*Z2) - (g1*X1 + h1*Y1 + i1*Z1) * (d2*X2 + e2*Y2 + f2*Z2)
fy = (a1*X1 + b1*Y1 + c1*Z1) * (g2*X2 + h2*Y2 + i2*Z2) - (g1*X1 + h1*Y1 + i1*Z1) * (a2*X2 + b2*Y2 + c2*Z2)
fz = (a1*X1 + b1*Y1 + c1*Z1) * (d2*X2 + e2*Y2 + f2*Z2) - (d1*X1 + e1*Y1 + f1*Z1) * (a2*X2 + b2*Y2 + c2*Z2)

F() = F[a1, b1,..., i1, a2, b2,..., i2, ..., an,..., in] = 0

Изравнени и приблизителни стойности:
====================================
Приблизителните стойности са: a1, ...,i1 , a2, ...,i2,  ... an, ...,in
Изравнените стойности са:     a'1,...,i'1, a'2,...,i'2, ... a'n,...,i'n
a'1 = a1 + δ(a1)
b'1 = b1 + δ(b1)
...
i'n = in + δ(in)

F() = F[a'1, ..., i'n] = F[a1 + δ(a1), ..., in + δ(in)] = 0
F() = F[a1, ..., in] + δ(a1)*d(F)/d(a1) + ... + δ(in)*d(F)/d(in) = 0

fx = fx[a1, ..., in] + δ(a1)*d(fx)/d(a1) + ... + δ(in)*d(fx)/d(in) = 0
fy = fy[a1, ..., in] + δ(a1)*d(fy)/d(a1) + ... + δ(in)*d(fy)/d(in) = 0
fz = fz[a1, ..., in] + δ(a1)*d(fz)/d(a1) + ... + δ(in)*d(fz)/d(in) = 0

Неизвестни:
===========
U[0]  = δ(a1)
U[1]  = δ(b1)
...
U[8]  = δ(i1)
U[9]  = δ(a2)
...
U[17] = δ(i2)
...
U[n*9-1]= δ(in)

Свободни членове:
=================
L[0] = fx[a1, ..., in](R1) = fx[a1, ..., in](R1(X1),R1(Y1),R1(X2),R1(Y2))
L[1] = fy[a1, ..., in](R1) = fy[a1, ..., in](R1(X1),R1(Y1),R1(X2),R1(Y2))
L[2] = fz[a1, ..., in](R1) = fz[a1, ..., in](R1(X1),R1(Y1),R1(X2),R1(Y2))
...
L[3*k-3] = fx[a1, ..., in](Rk) = fx[a1, ..., in](Rk(Xi),Rk(Yi),Rk(Xj),Rk(Yj))
L[3*k-2] = fy[a1, ..., in](Rk) = fy[a1, ..., in](Rk(Xi),Rk(Yi),Rk(Xj),Rk(Yj))
L[3*k-1] = fz[a1, ..., in](Rk) = fz[a1, ..., in](Rk(Xi),Rk(Yi),Rk(Xj),Rk(Yj))
                                                                            
Частни производни на F() или на fx, fy, fz
==========================================
Частни производни на fx:
A[0][0] = d(fx)/d(a1) = 0
A[0][1] = d(fx)/d(b1) = 0
A[0][2] = d(fx)/d(c1) = 0

A[0][3] = d(fx)/d(d1) =  X1 * (g2*X2 + h2*Y2 + i2*Z2) =  X1 * P'2(z)
A[0][4] = d(fx)/d(e1) =  Y1 * (g2*X2 + h2*Y2 + i2*Z2) =  Y1 * P'2(z)
A[0][5] = d(fx)/d(f1) =  Z1 * (g2*X2 + h2*Y2 + i2*Z2) =  Z1 * P'2(z)

A[0][6] = d(fx)/d(g1) = -X1 * (d2*X2 + e2*Y2 + f2*Z2) = -X1 * P'2(y)
A[0][7] = d(fx)/d(h1) = -Y1 * (d2*X2 + e2*Y2 + f2*Z2) = -Y1 * P'2(y)
A[0][8] = d(fx)/d(i1) = -Z1 * (d2*X2 + e2*Y2 + f2*Z2) = -Z1 * P'2(y)

A[0][9] = d(fx)/d(a2) = 0
A[0][10]= d(fx)/d(b2) = 0
A[0][11]= d(fx)/d(c2) = 0

A[0][12]= d(fx)/d(d2) = -X2 * (g1*X1 + h1*Y1 + i1*Z1) = -P'1(z) * X2
A[0][13]= d(fx)/d(e2) = -Y2 * (g1*X1 + h1*Y1 + i1*Z1) = -P'1(z) * Y2
A[0][14]= d(fx)/d(f2) = -Z2 * (g1*X1 + h1*Y1 + i1*Z1) = -P'1(z) * Z2

A[0][15]= d(fx)/d(g2) =  X2 * (d1*X1 + e1*Y1 + f1*Z1) =  P'1(y) * X2
A[0][16]= d(fx)/d(h2) =  Y2 * (d1*X1 + e1*Y1 + f1*Z1) =  P'1(y) * Y2
A[0][17]= d(fx)/d(i2) =  Z2 * (d1*X1 + e1*Y1 + f1*Z1) =  P'1(y) * Z2
...
A[0][?] = d(fx)/d(?)  = 0

Частни производни на fy:
A[1][0] = d(fy)/d(a1) =  X1 * (g2*X2 + h2*Y2 + i2*Z2) =  X1 * P'2(z)
A[1][1] = d(fy)/d(b1) =  Y1 * (g2*X2 + h2*Y2 + i2*Z2) =  Y1 * P'2(z)
A[1][2] = d(fy)/d(c1) =  Z1 * (g2*X2 + h2*Y2 + i2*Z2) =  Z1 * P'2(z)

A[1][3] = d(fy)/d(d1) = 0
A[1][4] = d(fy)/d(e1) = 0
A[1][5] = d(fy)/d(f1) = 0

A[1][6] = d(fy)/d(g1) = -X1 * (a2*X2 + b2*Y2 + c2*Z2) = -X1 * P'2(x)
A[1][7] = d(fy)/d(h1) = -Y1 * (a2*X2 + b2*Y2 + c2*Z2) = -Y1 * P'2(x)
A[1][8] = d(fy)/d(i1) = -Z1 * (a2*X2 + b2*Y2 + c2*Z2) = -Z1 * P'2(x)

A[1][9] = d(fy)/d(a2) = -X2 * (g1*X1 + g1*Y1 + i1*Z1) = -P'1(z) * X2
A[1][10]= d(fy)/d(b2) = -Y2 * (g1*X1 + g1*Y1 + i1*Z1) = -P'1(z) * Y2
A[1][11]= d(fy)/d(c2) = -Z2 * (g1*X1 + g1*Y1 + i1*Z1) = -P'1(z) * Z2

A[1][12]= d(fy)/d(d2) = 0
A[1][13]= d(fy)/d(e2) = 0
A[1][14]= d(fy)/d(f2) = 0

A[1][15]= d(fy)/d(g2) =  X2 * (a1*X1 + b1*Y1 + c1*Z1) =  P'1(x) * X2
A[1][16]= d(fy)/d(h2) =  Y2 * (a1*X1 + b1*Y1 + c1*Z1) =  P'1(x) * Y2
A[1][17]= d(fy)/d(i2) =  Z2 * (a1*X1 + b1*Y1 + c1*Z1) =  P'1(x) * Z2
...
A[1][?] = d(fy)/d(?)  = 0

Частни производни на fz:
A[2][0] = d(fz)/d(a1) =  X1 * (d2*X2 + e2*Y2 + f2*Z2) =  X1 * P'2(y)
A[2][1] = d(fz)/d(b1) =  Y1 * (d2*X2 + e2*Y2 + f2*Z2) =  Y1 * P'2(y)
A[2][2] = d(fz)/d(c1) =  Z1 * (d2*X2 + e2*Y2 + f2*Z2) =  Z1 * P'2(y)

A[2][3] = d(fz)/d(d1) = -X1 * (a2*X2 + b2*Y2 + c2*Z2) = -X1 * P'2(x)
A[2][4] = d(fz)/d(e1) = -Y1 * (a2*X2 + b2*Y2 + c2*Z2) = -Y1 * P'2(x)
A[2][5] = d(fz)/d(f1) = -Z1 * (a2*X2 + b2*Y2 + c2*Z2) = -Z1 * P'2(x)

A[2][6] = d(fz)/d(g1) = 0
A[2][7] = d(fz)/d(h1) = 0
A[2][8] = d(fz)/d(i1) = 0

A[2][9] = d(fz)/d(a2) = -X2 * (d1*X1 + e1*Y1 + f1*Z1) = -P'1(y) * X2
A[2][10]= d(fz)/d(b2) = -Y2 * (d1*X1 + e1*Y1 + f1*Z1) = -P'1(y) * Y2
A[2][11]= d(fz)/d(c2) = -Z2 * (d1*X1 + e1*Y1 + f1*Z1) = -P'1(y) * Z2

A[2][12]= d(fz)/d(d2) =  X2 * (a1*X1 + b1*Y1 + c1*Z1) =  P'1(x) * X2
A[2][13]= d(fz)/d(e2) =  Y2 * (a1*X1 + b1*Y1 + c1*Z1) =  P'1(x) * Y2
A[2][14]= d(fz)/d(f2) =  Z2 * (a1*X1 + b1*Y1 + c1*Z1) =  P'1(x) * Z2

A[2][15]= d(fz)/d(g2) = 0
A[2][16]= d(fz)/d(h2) = 0
A[2][17]= d(fz)/d(i2) = 0
...
A[2][?] = d(fz)/d(?)  = 0

Обобщена формула:
fx = Fi, при i=0
fy = Fi, при i=1
fz = Fi, при i=2
Rk = R(Pa, Pb), където a, b са номер на снимката a,b=0..n-1

i=0 -> m=1, n=2
i=1 -> m=0, n=2
i=2 -> m=0, n=1

c = 0..2
A[i][a*9 + m*3 + c](Rk) =   Pa(c) * P'b(n) 
A[i][a*9 + n*3 + c](Rk) = - Pa(c) * P'b(m) 
A[i][b*9 + m*3 + c](Rk) = - Pb(c) * P'a(n) 
A[i][b*9 + n*3 + c](Rk) =   Pb(c) * P'a(m) 
A[?][?] = 0
                                                                            
Уравнения на поправките v(Xi) v(Yi) v(Zi)
=========================================
Rk = R(Pa, Pb), където a, b са номер на снимката a,b=0..n-1

Vx(Rk) = fx[a1,...,in] + δ(a1)*d(fx)/d(a1) + δ(b1)*d(fx)/d(b1) + ... + δ(in)*d(fx)/d(in)
Vy(Rk) = fy[a1,...,in] + δ(a1)*d(fy)/d(a1) + δ(b1)*d(fy)/d(b1) + ... + δ(in)*d(fy)/d(in)
Vz(Rk) = fz[a1,...,in] + δ(a1)*d(fz)/d(a1) + δ(b1)*d(fz)/d(b1) + ... + δ(in)*d(fz)/d(in)

Vx(Rk) = L[k*3+0](Rk) + U[0]*A[0][0](Rk) + U[1]A[0][1](Rk) + ... + U[n*9-1]*A[0][n*9-1](Rk)
Vy(Rk) = L[k*3+1](Rk) + U[0]*A[1][0](Rk) + U[1]A[1][1](Rk) + ... + U[n*9-1]*A[1][n*9-1](Rk)
Vz(Rk) = L[k*3+2](Rk) + U[0]*A[2][0](Rk) + U[1]A[2][1](Rk) + ... + U[n*9-1]*A[2][n*9-1](Rk)

V[0] = L[0] + U[0]*A[0][0](R0) + U[1]A[0][1](R0) + ... + U[n*9-1]*A[0][n*9-1](R0)
V[1] = L[1] + U[0]*A[1][0](R0) + U[1]A[1][1](R0) + ... + U[n*9-1]*A[1][n*9-1](R0)
V[2] = L[2] + U[0]*A[2][0](R0) + U[1]A[2][1](R0) + ... + U[n*9-1]*A[2][n*9-1](R0)
...
V[3*k-3] = L[3*k-3] + U[0]*A[0][0](Rk) + U[1]A[0][1](Rk) + ... + U[n*9-1]*A[0][n*9-1](Rk)
V[3*k-2] = L[3*k-2] + U[0]*A[1][0](Rk) + U[1]A[1][1](Rk) + ... + U[n*9-1]*A[1][n*9-1](Rk)
V[3*k-1] = L[3*k-1] + U[0]*A[2][0](Rk) + U[1]A[2][1](Rk) + ... + U[n*9-1]*A[2][n*9-1](Rk)

Обобщена формула:
i = 0..3*(k-1)
V[i] = L[i] + U[0]*A[i mod 3][0](Ri) + U[1]*A[i mod 3][1](Ri) +...+ U[n*9-1]*A[i mod 3][n*9-1](Ri)

Матрична форма:
V = L + B * U, където матриците имат размерности
V[0..3*(k-1)]
L[0..3*(k-1)]
U[0..n*9-1]
B[0..n*9-1, 0..3*(k-1)]
B[i,j] = A[j mod 3][i](R[j div 3])
