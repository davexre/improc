#!/bin/bash

function findToken() {
	grep -anm 1 "^${1}\$" "$0" | cut -d ':' -f 1
}

function extractData() {
	local end=${2:+$(($2-$1-1))}
	tail -n +$(($1+1)) "$0" | head -n ${end:-"-0"} | grep -v '^\s*\(#.*\)\?$'
}

function make_cfg() {
	for i in "${!cfg[@]}" ; do
		echo "$i=${cfg[$i]}"
	done
}

function generate_script_for_save() {
	SCRIPT_TOKEN=$(findToken '___SCRIPT___')
	head -n $SCRIPT_TOKEN "$0"
	make_cfg
}

function save() {
	local script=$(save)
	echo "$script" > "$0"
}

function trim() {
	echo "$@" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
}

function read_cfg() {
	unset cfg
	declare -Ag cfg
	local keys vals
	local SCRIPT_TOKEN=$(findToken '___SCRIPT___')
	local DATA=$(extractData SCRIPT_TOKEN)
	readarray -t keys < <(echo "$DATA" | cut -d '=' -f 1)
	readarray -t vals < <(echo "$DATA" | cut -d '=' -f 2-)
	for i in "${!keys[@]}" ; do
		cfg[$(trim "${keys[$i]}")]=$(trim $(echo -e "${vals[$i]}"))
	done
}

read_cfg
make_cfg

#generate_script_for_save

#DATA=$(make_cfg)
#echo "$DATA"



exit

___SCRIPT___
 asd = Some \t data "${vals[@]}"
   qwe = Some = data  

